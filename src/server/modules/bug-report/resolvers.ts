import Bowser from "bowser";

import {
  MAX_USER_FEEDBACK_MESSAGE_LENGTH,
  MIN_USER_FEEDBACK_MESSAGE_LENGTH,
} from "@shared/constants";

/**
 * On new checkouts, you're going to be missing this file. This
 * is autogenerated and therefore not checked into the repository.
 * Generate this file automatically using `yarn gql:codegen`.
 */
import {
  Resolvers,
  MutationSubmitBugReportArgs,
  SubmitBugReportResult,
} from "@server/graphql.generated";

import { ServerContext } from "@server/context";

export const BUG_REPORT_RESOLVERS: Resolvers = {
  Mutation: {
    submitBugReport: async (
      _: unknown,
      { message, userAgent, clientVersion }: MutationSubmitBugReportArgs,
      { dataSources: { database } }: ServerContext
    ): Promise<SubmitBugReportResult> => {
      if (message.length < MIN_USER_FEEDBACK_MESSAGE_LENGTH) {
        return {
          success: false,
        };
      }

      if (message.length > MAX_USER_FEEDBACK_MESSAGE_LENGTH) {
        return {
          success: false,
        };
      }

      try {
        const bowser = Bowser.getParser(userAgent);

        await database.addBugReport({
          browser: bowser.getBrowserName(),
          clientVersion,
          message,
          os: bowser.getOSName(),
          userAgent,
        });
        return {
          success: true,
        };
      } catch (err) {
        console.error("submitBugReport error", err);
        return {
          success: false,
        };
      }
    },
  },
};
