/**
 * On new checkouts, you're going to be missing this file. This
 * is autogenerated and therefore not checked into the repository.
 * Generate this file automatically using `yarn gql:codegen`.
 */
import { Resolvers, UserAccount } from "@server/graphql.generated";

import { ServerContext } from "@server/context";

export const USER_ACCOUNTS_RESOLVERS: Resolvers = {
  Query: {
    activeUser: async (
      _parent: unknown,
      _args: unknown,
      { dataSources: { database }, userToken }: ServerContext
    ): Promise<UserAccount | null> => {
      if (!userToken) {
        console.log("nope");
        return null;
      }

      const validation = await userToken.validate();
      if (!validation.valid) {
        console.log("validation error:", validation.error);
        return null;
      }

      const user = await database.getUserById(validation.userSession.userId);
      if (!user) {
        // This shouldn't be possible because of foreign key constraints in the
        // database, but let's quietly handle this as well.
        return null;
      }

      return {
        dateRegistered: user.dateRegistered,
        username: user.email,
      };
    },
  },
};
