import { GraphQLScalarType, GraphQLScalarTypeConfig } from "graphql";
import { Kind } from "graphql/language";

/**
 * On new checkouts, you're going to be missing this file. This
 * is autogenerated and therefore not checked into the repository.
 * Generate this file automatically using `yarn gql:codegen`.
 */
import { Resolvers } from "@server/graphql.generated";

const DATE_SCALAR_TYPE_CONFIG: GraphQLScalarTypeConfig<Date, number> = {
  description: "Date type serialized as a Unix Epoch timestamp",
  name: "Date",
  parseLiteral: (ast) => {
    if (ast.kind === Kind.INT) {
      // ast value is always in string format
      const timestamp = parseInt(ast.value, 10);
      return new Date(timestamp);
    }

    return null;
  },
  parseValue: (value) => {
    const asNumber = Number(value);
    if (isNaN(asNumber)) {
      return null;
    }

    if (asNumber < 0) {
      return null;
    }

    return new Date(value);
  },
  serialize: (value: Date) => {
    return value.getTime();
  },
};

export const CORE_RESOLVERS: Resolvers = {
  Date: new GraphQLScalarType(DATE_SCALAR_TYPE_CONFIG),
  Query: {
    serverVersion: (): string => process.env.npm_package_version || "<unknown>",
  },
};
